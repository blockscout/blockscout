name: ci/cd sepolia
on:
  workflow_dispatch:
    cluster:
      environment:
        description: 'Select Target Cluster'
        default: 'prod-kroma-sepolia-apne2'
        options:
          - 'prod-kroma-sepolia-apne2'

jobs:
  ci:
    environment: prod
    outputs:
      docker-tag: ${{ steps.prepare.outputs.docker-tag }}
      target-cluster: ${{ steps.prepare.outputs.target-cluster }}

    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          echo "docker-tag=dev-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
          echo "target-cluster=${{ github.event.cluster.environment || 'prod-kroma-sepolia-apne2' }}" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish Kroma Blockscout V2 Backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ secrets.AWS_ECR_REPOSITORY }}/blockscout-v2:${{ steps.prepare.outputs.docker-tag }},${{ secrets.AWS_ECR_REPOSITORY }}/blockscout-v2:latest
          platforms: linux/amd64
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            API_V1_READ_METHODS_DISABLED="true"
            DISABLE_WEBAPP="true"
            API_V1_WRITE_METHODS_DISABLED="true"
            CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            ADMIN_PANEL_ENABLED=
            RELEASE_VERSION="5.2.0"
  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.KROMA_DELIVERY_REPO }}
          ref: main
          token: ${{ secrets.KROMA_GIT_TOKEN }}

      - name: Update Image Tag
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.backend.image.tag = "${{ needs.ci.outputs.docker-tag }}"' 'kroma-ecosystem/blockscout-v2/${{ needs.ci.outputs.target-cluster }}.yaml'

      - name: Push Changed Image Tag
        run: |
          git config --global user.email lightscale@lightscale.io
          git config --global user.name lightscale
          git config --global push.default matching
          git fetch && git checkout main

          if [ -z "$(git status --porcelain)" ]
          then
            echo "Nothing to commit, working directory clean"
          else
            git commit -am "https://github.com/${{ github.repository }}/commit/${GITHUB_SHA}" && git push
          fi
        shell: bash
