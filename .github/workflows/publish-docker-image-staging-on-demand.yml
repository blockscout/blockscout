name: Publish Docker image to staging on demand

on:
  workflow_dispatch:
  push:
    branches:
      - staging
    paths-ignore:
      - 'CHANGELOG.md'
      - '**/README.md'
      - 'docker-compose/*'
env:
  OTP_VERSION: ${{ vars.OTP_VERSION }}
  ELIXIR_VERSION: ${{ vars.ELIXIR_VERSION }}
  RELEASE_VERSION: ${{ vars.RELEASE_VERSION }}

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.output-step.outputs.release-version }}
      short-sha: ${{ steps.output-step.outputs.short-sha }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup repo
        uses: ./.github/actions/setup-repo-and-short-sha
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Add outputs
        run: |
          echo "::set-output name=release-version::${{ env.NEXT_RELEASE_VERSION }}"
          echo "::set-output name=short-sha::${{ env.SHORT_SHA }}"
        id: output-step

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          cache-from: type=registry,ref=blockscout/blockscout:buildcache
          cache-to: type=registry,ref=blockscout/blockscout:buildcache,mode=max
          tags: blockscout/blockscout-staging:latest, blockscout/blockscout-staging:${{ env.RELEASE_VERSION }}.commit.${{ env.SHORT_SHA }}
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            API_V1_READ_METHODS_DISABLED=false
            DISABLE_WEBAPP=false
            API_V1_WRITE_METHODS_DISABLED=false
            CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=
            ADMIN_PANEL_ENABLED=false
            DECODE_NOT_A_CONTRACT_CALLS=false
            MIXPANEL_URL=
            MIXPANEL_TOKEN=
            AMPLITUDE_URL=
            AMPLITUDE_API_KEY=
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            BLOCKSCOUT_VERSION=v${{ env.RELEASE_VERSION }}-beta.+commit.${{ env.SHORT_SHA }}
            RELEASE_VERSION=${{ env.RELEASE_VERSION }}
