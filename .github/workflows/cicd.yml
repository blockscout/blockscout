name: Selectable Environment CICD
run-name: Deploy to ${{ github.event.inputs.environment }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select Environment"
        type: choice
        required: true
        options:
          - "sail"
          - "sepolia"
          - "mainnet"
env:
  APP_NAME: blockscout-v2
  IMAGE_NAME: blockscout-v2
  NAMESPACE: kroma-ecosystem

jobs:
  ci:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.predefined.outputs.IMAGE_TAG }}

    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Predefined
        id: predefined
        run: echo "IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Publish Kroma Blockscout V2 Backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ secrets.AWS_ECR_REPOSITORY }}/blockscout-v2:${{ steps.predefined.outputs.IMAGE_TAG }},${{ secrets.AWS_ECR_REPOSITORY }}/blockscout-v2:latest
          platforms: linux/amd64
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            API_V1_READ_METHODS_DISABLED=false
            DISABLE_WEBAPP=false
            API_V1_WRITE_METHODS_DISABLED=false
            CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=
            ADMIN_PANEL_ENABLED=false
            DECODE_NOT_A_CONTRACT_CALLS=false
            MIXPANEL_URL=
            MIXPANEL_TOKEN=
            AMPLITUDE_URL=
            AMPLITUDE_API_KEY=
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            BLOCKSCOUT_VERSION=v5.2.2
            RELEASE_VERSION=5.2.2


  cd:
    needs: ci
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: kroma-network/devops-helm
          ref: main
          token: ${{ secrets.KROMA_GIT_TOKEN }}

      - name: Update Image Tag
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.backend.image.tag = "${{ needs.ci.outputs.IMAGE_TAG }}"' '${{ env.NAMESPACE }}/${{ env.APP_NAME }}/${{ secrets.CLUSTER }}.yaml'
      - name: Push Changed Image Tag
        run: |
          git config --global user.email lightscale@lightscale.io
          git config --global user.name lightscale

          if [ -z "$(git status --porcelain)" ]
          then
            echo "Nothing to commit, working directory clean"
          else
            git commit -am "${{ env.APP_NAME }} ${{ needs.ci.outputs.IMAGE_TAG }}" && git push
          fi
