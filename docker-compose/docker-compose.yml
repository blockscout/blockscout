version: '3.9'

services:
  db-init:
    extends:
      file: ./services/db.yml
      service: db-init

  db:
    extends:
      file: ./services/db.yml
      service: db

  backend:
    depends_on:
      - db
    extends:
      file: ./services/backend.yml
      service: backend
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      args:
        CACHE_EXCHANGE_RATES_PERIOD: ""
        API_V1_READ_METHODS_DISABLED: "false"
        DISABLE_WEBAPP: "false"
        API_V1_WRITE_METHODS_DISABLED: "false"
        CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED: ""
        CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL: ""
        ADMIN_PANEL_ENABLED: ""
        RELEASE_VERSION: 6.1.0
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_HTTP_URL: ${ENDPOINT}
        # ETHEREUM_JSONRPC_TRACE_URL: ${ENDPOINT}
        ETHEREUM_JSONRPC_WS_URL: ${WS_ENDPOINT}
        CHAIN_ID: '${CHAIN_ID}'
        LOGO: "/images/skale_logo.png"
        SUBNETWORK: ${SCHAIN_NAME}
        ETHEREUM_JSONRPC_VARIANT: "geth"
        # DATABASE_URL: postgresql://blockscout:ceWb1MeLBEeOIfk65gU8EjF8@host.docker.internal:${DB_PORT:-7432}/blockscout?ssl=false
        FIRST_BLOCK: ${FIRST_BLOCK:-0}
        NETWORK: "SKALE"
        INDEXER_RECEIPTS_BATCH_SIZE: 128
        INDEXER_COIN_BALANCES_BATCH_SIZE: 128
        # POOL_SIZE: 130
        INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER: "true"
        INDEXER_DISABLE_BLOCK_REWARD_FETCHER: "true"
        INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: "true"
        INDEXER_DISABLE_ADDRESS_COIN_BALANCE_FETCHER: "true"
        INDEXER_DISABLE_EMPTY_BLOCKS_SANITIZER: "true"
        ETHEREUM_JSONRPC_DISABLE_ARCHIVE_BALANCES: "true"
        INDEXER_CATCHUP_BLOCK_INTERVAL: "3s"
        # TXS_STATS_ENABLED: "false"
        # APPS_MENU: "false"
        # INDEXER_HIDE_INDEXING_PROGRESS_ALERT: "true"
        CHAIN_SPEC_PATH: "/opt/app/config.json"
        # COIN: "ETH"
        SECRET_KEY_BASE: "RMgI4C1HSkxsEjdhtGMfwAHfyT6CKWXOgzCboJflfSm4jeAlic52io05KB6mqzc5"

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      - backend
    extends:
      file: ./services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
    extends:
      file: ./services/stats.yml
      service: stats

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy
